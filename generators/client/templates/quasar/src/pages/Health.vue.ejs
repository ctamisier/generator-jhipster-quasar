<template>
  <q-page v-if="health">
    <div class="q-pa-md">
      <div class="row items-start q-gutter-md">
        <q-card>
          <q-card-section class="text-center">
            {{ $t('health.indicator.diskSpace') }}
          </q-card-section>
          <q-card-section class="text-center">
            <q-badge :color="badgeColor(health.components.diskSpace.status)">
              {{ health.components.diskSpace.status }}
            </q-badge>
          </q-card-section>
          <q-card-section>
            <q-field
              v-for="item in ['total', 'free', 'threshold']"
              :key="item"
              :label="item"
              readonly
              borderless
              stack-label
              style="width: 100px"
            >
              <template #control>
                {{ humanStorageSize(health.components.diskSpace.details[item]) }}
              </template>
            </q-field>
          </q-card-section>
        </q-card>
        <q-card>
          <q-card-section class="text-center">
            {{ $t('health.indicator.db') }}
          </q-card-section>
          <q-card-section class="text-center">
            <q-badge :color="badgeColor(health.components.db.status)">
              {{ health.components.db.status }}
            </q-badge>
          </q-card-section>
          <q-card-section>
            <q-field
              v-for="item in ['database', 'validationQuery']"
              :key="item"
              :label="item"
              readonly
              borderless
              stack-label
              style="width: 100px"
            >
              <template #control>
                {{ health.components.db.details[item] }}
              </template>
            </q-field>
          </q-card-section>
        </q-card>
        <q-card v-for="item in ['ping', 'livenessState', 'readinessState']" :key="item">
          <q-card-section class="text-center">
            {{ $t(`health.indicator.${item}`) }}
          </q-card-section>
          <q-card-section class="text-center">
            <q-badge :color="badgeColor(health.components[item].status)">
              {{ health.components[item].status }}
            </q-badge>
          </q-card-section>
        </q-card>
      </div>
    </div>
  </q-page>
</template>

<script setup>
import { api } from 'boot/axios';
import { format } from 'quasar';
import { ref } from 'vue';

const { humanStorageSize } = format;
const health = ref();

async function fetchHealth() {
  health.value = (await api.get('/management/health')).data;
}

fetchHealth();

function badgeColor(value) {
  if (value === 'UP') {
    return 'green';
  } else {
    return 'red';
  }
}
</script>
