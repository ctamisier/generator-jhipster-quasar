<template>
  <q-page class="q-pa-md flex flex-center">
    <q-form class="responsive-width q-gutter-md" greedy @submit="onSubmit">
      <q-input
        v-model="reset.newPassword"
        autocomplete="new-password"
        type="password"
        :label="$t('global.form[\'newpassword.label\']')"
        lazy-rules
        :rules="[$rules.required(), $rules.minLength(4), $rules.maxLength(100)]"
        @keydown.enter.prevent
      />
      <q-input
        v-model="reset.newPassword2"
        autocomplete="new-password"
        type="password"
        :label="$t('global.form[\'confirmpassword.label\']')"
        lazy-rules
        :rules="[$rules.sameAs(reset.newPassword)]"
      />
      <div class="flex justify-between">
        <q-btn type="submit" color="primary" :label="$t('reset.finish.form.button')" />
      </div>
    </q-form>
  </q-page>
</template>

<script setup>
import { api } from 'boot/axios';
import { useQuasar } from 'quasar';
import { reactive } from 'vue';
import { useRoute, useRouter } from 'vue-router';

const $q = useQuasar();
const router = useRouter();
const route = useRoute();

const reset = reactive({
  key: route.query.key,
  newPassword: null,
  newPassword2: null,
});

async function onSubmit() {
  try {
    await api.post('/api/account/reset-password/finish', reset);
    router.push('/');
  } catch (e) {
    $q.notify({
      type: 'negative',
      message: e.response.data.title,
    });
  }
}
</script>
