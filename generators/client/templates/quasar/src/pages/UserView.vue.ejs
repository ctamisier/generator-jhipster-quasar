<template>
  <q-page class="q-pa-md flex flex-center">
    <div class="responsive-width q-gutter-md">
      <q-field :label="$t('userManagement.login')" readonly stack-label data-cy="login">
        <template #control>
          {{ user.data.login }}
        </template>
      </q-field>
      <q-field :label="$t('userManagement.firstName')" readonly stack-label data-cy="firstName">
        <template #control>
          {{ user.data.firstName }}
        </template>
      </q-field>
      <q-field :label="$t('userManagement.lastName')" readonly stack-label data-cy="lastName">
        <template #control>
          {{ user.data.lastName }}
        </template>
      </q-field>
      <q-field :label="$t('userManagement.email')" readonly stack-label data-cy="email">
        <template #control>
          {{ user.data.email }}
        </template>
      </q-field>
      <q-field :label="$t('userManagement.activated')" readonly stack-label data-cy="activated">
        <template #control>
          <q-icon :name="`${user.data.activated ? 'check_box' : 'check_box_outline_blank'}`" size="sm" />
        </template>
      </q-field>
      <q-field :label="$t('userManagement.langKey')" readonly stack-label data-cy="langKey">
        <template #control>
          {{ user.data.langKey }}
        </template>
      </q-field>
      <q-field :label="$t('userManagement.profiles')" readonly stack-label data-cy="profiles">
        <template #control>
          <div class="q-gutter-md">
            <q-badge v-for="authority in user.data.authorities" :key="authority" color="primary">
              {{ authority }}
            </q-badge>
          </div>
        </template>
      </q-field>
      <div class="flex justify-end">
        <router-link v-slot="{ navigate }" :to="`/users/${user.data.login}/edit`" custom>
          <q-btn icon="edit" color="primary" @click="navigate" />
        </router-link>
      </div>
    </div>
  </q-page>
</template>

<script setup>
import { api } from 'boot/axios';
import { reactive } from 'vue';
import { useRoute } from 'vue-router';
import { langObjects } from 'app/src/constants/i18nConstants';

const route = useRoute();

const user = reactive({
  data: {
    id: null,
    login: null,
    firstName: null,
    lastName: null,
    email: null,
    activated: null,
    langKey: null,
    authorities: null,
  },
});

async function fetchUser() {
  if (route.params.login) {
    user.data = (await api.get(`/api/admin/users/${route.params.login}`)).data;
    user.data.langKey = langObjects.find(lang => lang.key === user.data.langKey).value;
  }
}

fetchUser();
</script>
